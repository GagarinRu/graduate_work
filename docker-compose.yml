version: '3.8'
name: movie_theater

services:
  # etl:
  #   build:
  #     context: ./elastic
  #     dockerfile: Dockerfile
  #   container_name: etl
  #   restart: always
  #   env_file:
  #     - .env
  #   depends_on:
  #     - theatre-db
  #     - elasticsearch
  #     - redis

  fastapi:
    image: fastapi-image
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      #- etl
      - redis

  redis:
    image: redislabs/redismod:latest
    container_name: redis
    expose:
      - "6379"
    restart: always
    volumes:
      - redis_data:/data
  
  # tests:
  #   build:
  #     context: ./tests
  #     dockerfile: Dockerfile
  #   container_name: tests
  #   volumes:
  #     - ./tests:/opt/app/tests:ro
  #   env_file:
  #     - ./tests/.env
  #   entrypoint: >
  #     sh -c "python3 /tests/functional/utils/wait_for_es.py
  #     && python3 /tests/functional/utils/wait_for_redis.py
  #     && python /tests/functional/utils/load_into_el.py
  #     && pytest -v
  #     && tail -f /dev/null"
  #   depends_on:
  #     - fastapi

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    restart: always
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2048m -Xmx2048m
    depends_on:
      - theatre-db
    ports:
      - 9200:9200

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - 80:80

  theatre-db:
    image: postgres:16
    container_name: theatre-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=qwerty1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=project_collection
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database_dump.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  postgres_data:
  elasticsearch:
  redis_data:
