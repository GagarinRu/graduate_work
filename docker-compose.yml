services:
  etl:
    build:
      context: ./elastic
      dockerfile: Dockerfile
    container_name: etl
    restart: always
    env_file:
      - .env
    depends_on:
      - theatre-db
      - elasticsearch
      - redis
    networks:
        - movies-net

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    ports:
      - "8080-8081:8080"
    env_file:
      - .env
    depends_on:
      - etl
      - redis
      - theatre-db
      - jaeger
    networks:
        - movies-net

  fastapi_auth:
    build:
      context: ./fastapi_auth
      dockerfile: Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    ports:
      - "8070-8071:8070"
    env_file:
      - .env
    depends_on:
      - etl
      - redis
      - theatre-db
      - jaeger
    networks:
        - movies-net

  redis:
    image: redislabs/redismod:latest
    container_name: redis
    expose:
      - "6379"
    restart: always
    volumes:
      - redis_data:/data
    networks:
        - movies-net

  elasticsearch:
    image: elasticsearch:8.7.0
    container_name: elasticsearch
    restart: always
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    depends_on:
      - theatre-db
    ports:
      - "9200:9200"
    networks:
        - movies-net

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - fastapi
      - fastapi_auth
    ports:
      - "80:80"
    networks:
        - movies-net

  theatre-db:
    image: postgres:16
    container_name: theatre-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=qwerty1234
      - POSTGRES_USER=postgres
      - POSTGRES_DB=project_collection
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
        - movies-net

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "14268:14268"
      - "16686:16686"
    networks:
        - movies-net

networks:
  movies-net:
      driver: bridge

volumes:
  postgres_data:
  elasticsearch:
  redis_data:
