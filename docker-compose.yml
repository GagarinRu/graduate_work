services:

  fastapi1:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: searchapi_1
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db
      # - jaeger
    volumes:
      - /tmp/logs/fastapi/:/var/log/fastapi/

  fastapi2:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    container_name: searchapi_2
    ports:
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db
      # - jaeger
    volumes:
      - /tmp/logs/fastapi/:/var/log/fastapi/

  fastapi_auth1:
    build:
      context: ./fastapi_auth
      dockerfile: Dockerfile
    container_name: authapi_1
    command: >
      bash -c "/opt/app/entrypoint.sh uvicorn src.main:app --reload --host $UVICORN_HOST --port $UVICORN_PORT_AUTH"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db
      # - jaeger
    volumes:
      - ./fastapi_auth:/opt/app
      - /tmp/logs/fastapi_auth/:/var/log/fastapi_auth/

  fastapi_auth2:
    build:
      context: ./fastapi_auth
      dockerfile: Dockerfile
    container_name: authapi_2
    command: >
      bash -c "/opt/app/entrypoint.sh uvicorn src.main:app --reload --host $UVICORN_HOST --port $UVICORN_PORT_AUTH"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db
      # - jaeger
    volumes:
      - ./fastapi_auth:/opt/app
      - /tmp/logs/fastapi_auth/:/var/log/fastapi_auth/


  fastapi_ugc:
    build:
      context: ./fastapi_ugc
      dockerfile: Dockerfile
    container_name: fastapi_ugc
    env_file:
      - ./.env
    ports:
      - "8060:8060"
    restart: unless-stopped
    depends_on:
      - ugc_mongo_db

  fastapi_ws:
    build:
      context: ./fastapi_ws
      dockerfile: Dockerfile
    container_name: ws_1
    volumes:
      - ./static:/app/static
    ports:
      - "8090:8090"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db

  fastapi_recom:
    build:
      context: ./fastapi_recom
      dockerfile: Dockerfile
    container_name: fastapi_recom
    ports:
      - "8050:8050"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db

  grpc_auth:
    build:
      context: ./fastapi_auth
      dockerfile: Dockerfile
    container_name: grpc_auth
    command: >
      bash -c "cd /opt/app && python -m src.auth_server.grpc.grpc_server_entrypoint"
    ports:
      - "50051:50051"
    env_file:
      - .env
    depends_on:
      - redis
      - theatre-db
      # - jaeger
    volumes:
      - ./fastapi_auth:/opt/app
      - /tmp/logs/fastapi_auth/:/var/log/fastapi_auth/

  redis:
    image: redislabs/redismod:latest
    container_name: redis
    expose:
      - "6379"
    restart: always
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - /tmp/logs/nginx/:/var/log/nginx/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - fastapi1
      - fastapi2
      - fastapi_auth1
      - fastapi_auth2
      - fastapi_ugc
      - fastapi_ws
    ports:
      - "80:80"

  theatre-db:
    image: postgres:16
    container_name: theatre-db
    ports:
      - "5432:5432"
    env_file:
      - .env
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  ugc_mongo_db:
      image: mongo
      env_file:
        - .env
      restart: always
      volumes:
        - ./fastapi_ugc/mongo:/docker-entrypoint-initdb.d
      ports:
        - "27017:27017"


  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   container_name: jaeger
  #   ports:
  #     - "14268:14268"
  #     - "16686:16686"

  rabbitmq:
    image: rabbitmq:4.0.7-management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "15672:15672"
    env_file:
      - .env
    volumes:
      - ./deploy/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./deploy/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
      - rabbitmq_data:/var/lib/rabbitmq


  mail-service:
    build:
      context: ./mail
      dockerfile: Dockerfile
    container_name: mail-service
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - ./mail:/app

  mailpit:
    image: axllent/mailpit
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI

  # logstash:
  #   image: logstash:8.10.2
  #   depends_on:
  #     - elkelasticsearch
  #   env_file:
  #     - .env
  #   ports:
  #     - "5044:5044/udp"
  #   volumes:
  #     - /tmp/logs/nginx/:/var/log/nginx/:ro
  #     - /tmp/logs/fastapi/:/var/log/fastapi/:ro
  #     - /tmp/logs/fastapi_auth/:/var/log/fastapi_auth/:ro
  #     - ./deploy/logstash.conf:/config/logstash.conf:ro
  #   command: logstash -f /config/logstash.conf
  #   links:
  #     - elkelasticsearch

  # sentry-api:
  #   image: sentry:latest
  #   env_file:
  #     - .env
  #   depends_on:
  #     - theatre-db
  #     - redis
  #   ports:
  #     - "9010:9000"

  # sentry-worker:
  #   image: sentry:latest
  #   env_file:
  #     - .env
  #   depends_on:
  #     - theatre-db
  #     - redis
  #   command: sentry run worker

  # sentry-cron:
  #   image: sentry:latest
  #   env_file:
  #     - .env
  #   depends_on:
  #     - theatre-db
  #     - redis
  #   command: sentry run cron

  # kibana:
  #   image: kibana:8.10.2
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elkelasticsearch
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://${ELK_ES_DSN}
  #   links:
  #     - elkelasticsearch

  # elkelasticsearch:
  #   image: elasticsearch:8.10.2
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9250:9200"
  #   volumes:
  #     - elkelasticsearch:/usr/share/elasticsearch/data

  # filebeat:
  #   image: elastic/filebeat:8.10.2
  #   volumes:
  #     - /tmp/logs/nginx/:/var/log/nginx:ro
  #     - /tmp/logs/fastapi/:/var/log/fastapi/:ro
  #     - /tmp/logs/fastapi_auth/:/var/log/fastapi_auth/:ro
  #     - ./deploy/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #   command: filebeat -e -strict.perms=false
  #   env_file:
  #     - .env
  #   depends_on:
  #     - nginx
  #     - logstash
  #     - elkelasticsearch
  #     - kibana

volumes:
  postgres_data:
  # elkelasticsearch:
  redis_data:
  rabbitmq_data:
